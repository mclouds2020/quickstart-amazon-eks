AWSTemplateFormatVersion: "2010-09-09"
Description: "Prepare an existing EKS cluster (qs-1p817r5f9)"
Metadata:
  LintSpellExclude: ['http://10.101.0.100:3128/', Security Group, Subnet IDs, 'No', vpc]
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EKS cluster details
        Parameters:
          - KubeClusterName
          - VPCID
          - K8sSubnetIds
          - HttpProxy
          - ControlPlaneSecurityGroup
          - PerAccountSharedResources
          - PerRegionSharedResources
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      KubeClusterName:
        default: EKS cluster name
      ControlPlaneSecurityGroup:
        default: EKS Security Group
      K8sSubnetIds:
        default: EKS Subnet IDs
      PerAccountSharedResources:
        default: Deploy account level shared resources
      PerRegionSharedResources:
        default: Deploy region level shared resources
      VPCID:
        default: VPC ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      HttpProxy:
        default: HTTP proxy
Parameters:
  KubeClusterName:
    Type: String
    Description: Name of the EKS cluster to be enabled for CloudFormation use.
  K8sSubnetIds:
    Type: String
    Description: '[Optional] comma separated list of Subnet IDs associated with the EKS cluster. Must have routes to the Kubernetes, CloudFormation and EKS endpoints. Leave blank for publicly accessible clusters.'
    Default: ""
  ControlPlaneSecurityGroup:
    Type: String
    Default: ""
    Description: '[Optional] Security Group ID attached to the EKS cluster. Must have allow outbound access to the Kubernetes, CloudFormation and EKS endpoints. Leave blank for publicly accessible clusters.'
  PerAccountSharedResources:
    Type: String
    AllowedValues: ['Yes', 'No']
    Default: 'Yes'
    Description: Choose "No" if you have already deployed the EKS account shared resources in this AWS account.
  PerRegionSharedResources:
    Type: String
    AllowedValues: ['Yes', 'No']
    Default: 'Yes'
    Description: Choose "No" if you have already deployed the EKS regional shared resources stack in this Region.
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC that contains your EKS cluster (e.g., vpc-0343606e).
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: quickstart-amazon-eks/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  HttpProxy:
    Type: String
    Default: ""
    Description: "HTTP(S) proxy configuration, if provided all worker nodes and pod egress traffic will go use this proxy. Example: http://10.101.0.100:3128/"
Conditions:
  CreatePerAccountSharedResources: !Equals [!Ref PerAccountSharedResources, 'Yes']
  CreatePerRegionSharedResources: !Equals [!Ref PerRegionSharedResources, 'Yes']
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Mappings:
  Config:
    Prefix: { Value: 'eks-quickstart' }
    Bucket:
      Bucket: 'aws-quickstart'
      Key: 'quickstart-amazon-eks/functions/packages/'
Resources:
  AccountSharedResources:
    Type: AWS::CloudFormation::Stack
    Condition: CreatePerAccountSharedResources
    DeletionPolicy: Retain
    Metadata: { cfn-lint: { config: { ignore_checks: [W3011] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-per-account-resources.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Tags: [{Key: !FindInMap [Config, Prefix, Value], Value: AccountSharedResources}]
  RegionalSharedResources:
    Type: AWS::CloudFormation::Stack
    Condition: CreatePerRegionSharedResources
    DeletionPolicy: Retain
    Metadata:
      cfn-lint: { config: { ignore_checks: [W3011] } }
      DependsOn: !If [CreatePerAccountSharedResources, !Ref AccountSharedResources, !Ref 'AWS::NoValue']
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-per-region-resources.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
      Tags: [{Key: !FindInMap [Config, Prefix, Value], Value: RegionalSharedResources}]
  IamStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-iam.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        CreateBastionRole: "Disabled"
        BastionIAMRoleName: ""
        CreateWindowsRole: "Disabled"
  FunctionStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-functions.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        LambdaZipsBucketName: !Sub ['${Prefix}-lambdazips-${AWS::Region}-${AWS::AccountId}', {Prefix: !FindInMap [Config, Prefix, Value]}]
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        KubernetesAdminRoleArn: !GetAtt IamStack.Outputs.KubernetesAdminRoleArn
        ControlPlaneSecurityGroup: !Ref ControlPlaneSecurityGroup
        VPCID: !Ref VPCID
        EKSSubnetIds: !Ref K8sSubnetIds
        EKSClusterName: !Ref KubeClusterName
        HttpProxy: !Ref HttpProxy
Outputs:
  EKSAdminRoleArn:
    Value: !GetAtt IamStack.Outputs.KubernetesAdminRoleArn
  HelmRoleArn:
    Value: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/awsqs-kubernetes-helm"
