AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys an EKS cluster into an existing VPC (qs-1p7nknoht)
Metadata:
  LintSpellExclude:
    - Resource Name
    - Kubernetes
    - ARNs
    - Resource Names
    - autoscaler
    - IOPS
    - EfsStorageClass
    - dcd
    - vpc-0343606e
    - Lambda
    - maxIO
    - Snyk
    - New Relic
    - Enabled
    - Disabled
    - Snyk
    - 'No '
    - Windows
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PublicSubnet3ID
          - RemoteAccessCIDR
          - HttpProxy
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - ProvisionBastionHost
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - EKSClusterName
          - NodeInstanceType
          - NumberOfNodes
          - EKSPublicAccessEndpoint
          - ManagedNodeGroup
          - AdditionalEKSAdminUserArn
          - AdditionalEKSAdminRoleArn
      - Label:
          default: Snyk monitor [APN security partner]
        Parameters:
          - SnykIntegrationId
          - SnykIntegration
      - Label:
          default: New Relic infrastructure [APN monitoring partner]
        Parameters:
          - NewRelicIntegration
          - NewRelicLicenseKey
      - Label:
          default: Optional Amazon EKS Windows configuration
        Parameters:
          - WindowsSupport
          - WindowsNodeInstanceType
          - WindowsNumberOfNodes
          - WindowsNodeGroupName
          - WindowsNodeVolumeSize
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - PerAccountSharedResources
          - PerRegionSharedResources
          - ConfigSetName
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
      - Label:
          default: Optional Kubernetes add-ins
        Parameters:
          - ALBIngressController
          - ClusterAutoScaler
          - EfsStorageClass
    ParameterLabels:
      KeyPairName:
        default: SSH key name
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      NodeInstanceType:
        default: Nodes instance type
      NumberOfNodes:
        default: Number of nodes
      ManagedNodeGroup:
        default: Managed node group
      WindowsSupport:
        default: Allow for creation of Windows node group
      WindowsNodeInstanceType:
        default: Windows node instance type
      WindowsNumberOfNodes:
        default: Number of Windows nodes
      WindowsNodeGroupName:
        default: Windows node group name
      WindowsNodeVolumeSize:
        default: Windows node volume size
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PublicSubnet3ID:
        default: Public subnet 3 ID
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PrivateSubnet3ID:
        default: Private subnet 3 ID
      VPCID:
        default: VPC ID
      AdditionalEKSAdminUserArn:
        default: Additional EKS admin ARN (IAM user)
      AdditionalEKSAdminRoleArn:
        default: Additional EKS admin ARN (IAM role)
      ClusterAutoScaler:
        default: Cluster autoscaler
      EfsStorageClass:
        default: EFS storage class
      ProvisionBastionHost:
        default: Provision bastion host
      ALBIngressController:
        default: ALB ingress controller
      EKSClusterName:
        default: EKS cluster name
      SnykIntegrationId:
        default: Snyk integration ID
      SnykIntegration:
        default: Snyk integration
      NewRelicIntegration:
        default: New Relic integration
      NewRelicLicenseKey:
        default: New Relic license key
      EKSPublicAccessEndpoint:
        default: EKS public access endpoint
      HttpProxy:
        default: HTTP proxy
      ConfigSetName:
        default: Config set name
      PerAccountSharedResources:
        default: Per account shared resources
      PerRegionSharedResources:
        default: Per region shared resources
Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: quickstart-amazon-eks/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances. We recommend that you set this value to a trusted IP range.
    Type: String
  EKSPublicAccessEndpoint:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: Configure access to the Kubernetes API server endpoint from outside of your VPC.
  AdditionalEKSAdminUserArn:
    Default: ""
    Description: "[OPTIONAL] IAM user Amazon Resource Name (ARN) to be granted admin access to the EKS cluster"
    Type: String
  AdditionalEKSAdminRoleArn:
    Default: ""
    Description: "[OPTIONAL] IAM role Amazon Resource Name (ARN) to be granted admin access to the EKS cluster"
    Type: String
  NodeInstanceType:
    Default: t3.medium
    AllowedValues: [t3.nano,t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge, m5.large, m5.xlarge, m5.2xlarge
                    m5.4xlarge, m5.12xlarge, m5.24xlarge, c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge, c5.18xlarge,
                    i3.large, i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge, i3.16xlarge, x1.16xlarge, x1.32xlarge, p3.2xlarge,
                    p3.8xlarge, p3.16xlarge, r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r5.12xlarge, r5.24xlarge, r5d.large, 
                    r5d.xlarge, r5d.2xlarge, r5d.4xlarge, r5d.12xlarge, r5d.24xlarge, z1d.large, z1d.xlarge, z1d.2xlarge. 
                    z1d.3xlarge, z1d.6xlarge, z1d.12xlarge]
    ConstraintDescription: Must be a valid EC2 instance type
    Description: The type of EC2 instance for the node instances.
    Type: String
  NumberOfNodes:
    Default: 3
    Description: The number of Amazon EKS node instances. The default is one for each of the three Availability Zones.
    Type: Number
  ManagedNodeGroup:
    AllowedValues: [ "yes", "no" ]
    Default: "no"
    Description: Choose if you want to use a managed node group. If you select "yes", you must select Kubernetes version 1.14 or higher.
    Type: String
  VPCID:
    Type: "AWS::EC2::VPC::Id"
    Description: The ID of your existing VPC (e.g., vpc-0343606e)
  PublicSubnet1ID:
    Type: String
    Description: The ID of the public subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a0246dcd)
    Default: ""
  PublicSubnet2ID:
    Type: String
    Description: The ID of the public subnet in Availability Zone 2 in your existing VPC (e.g., subnet-b1236eea)
    Default: ""
  PublicSubnet3ID:
    Type: String
    Description: The ID of the public subnet in Availability Zone 3 in your existing VPC (e.g., subnet-c3456aba)
    Default: ""
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: The ID of the private subnet in Availability Zone 1 in your existing VPC (e.g., subnet-fe9a8b32)
  PrivateSubnet2ID:
    Type: String
    Description: The ID of the private subnet in Availability Zone 2 in your existing VPC (e.g., subnet-be8b01ea)
    Default: ""
  PrivateSubnet3ID:
    Type: String
    Description: The ID of the private subnet in Availability Zone 3 in your existing VPC (e.g., subnet-abd39039)
    Default: ""
  ClusterAutoScaler:
    Type: String
    AllowedValues: [ Enabled, Disabled ]
    Default: Disabled
    Description: Choose Enabled to enable Kubernetes cluster autoscaler.
  EfsStorageClass:
    Type: String
    AllowedValues: [ Enabled, Disabled ]
    Default: Disabled
    Description: Choose Enabled to enable EFS storage class, which will create the required EFS volume.
  HttpProxy:
    Type: String
    Default: ""
    Description: "HTTP(S) proxy configuration, if provided all worker nodes and pod egress traffic will go use this proxy. Example: http://10.101.0.100:3128/"
  ProvisionBastionHost:
    Type: String
    AllowedValues: [ "Enabled", "Disabled" ]
    Default: "Enabled"
    Description: "Skip creating a bastion host by setting this is set to Disabled."
  WindowsSupport:
    Type: String
    AllowedValues: [ "Enabled", "Disabled" ]
    Default: "Disabled"
    Description: "Choose Enabled to create a Windows Nodegroup."
  WindowsNodeInstanceType:
    Default: t3.large
    AllowedValues: [t3.nano,t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge, m5.large, m5.xlarge, m5.2xlarge
                    m5.4xlarge, m5.12xlarge, m5.24xlarge, c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge, c5.18xlarge,
                    i3.large, i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge, i3.16xlarge, x1.16xlarge, x1.32xlarge, p3.2xlarge,
                    p3.8xlarge, p3.16xlarge, r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r5.12xlarge, r5.24xlarge, r5d.large, 
                    r5d.xlarge, r5d.2xlarge, r5d.4xlarge, r5d.12xlarge, r5d.24xlarge, z1d.large, z1d.xlarge, z1d.2xlarge. 
                    z1d.3xlarge, z1d.6xlarge, z1d.12xlarge]
    ConstraintDescription: Must be a valid EC2 instance type
    Description: The type of EC2 instance for the node instances.
    Type: String
  WindowsNumberOfNodes:
    Default: 3
    Description: The number of Amazon EKS Windows node instances. The default is one for each of the three Availability Zones.
    Type: Number
  WindowsNodeGroupName:
    Default: Default-Windows
    Description: The name for EKS Windows node group.
    Type: String
  WindowsNodeVolumeSize:
    Default: 50
    Description: The size for the Windows node's root EBS volumes (should be at least 50 gb).
    Type: String
  ALBIngressController:
    Type: String
    AllowedValues: [ "Enabled", "Disabled" ]
    Default: "Disabled"
    Description: "Set this to Enabled to deploy the ALB ingress controller."
  EKSClusterName:
    Type: String
    Default: ""
    Description: "[OPTIONAL] Name for the EKS cluster, if left blank one will be auto-generated. Must be unique within the AWS Region."
  SnykIntegrationId:
    Type: String
    AllowedPattern: '^[a-z0-9-]{36}$|^$'
    Default: ""
    Description: '[Optional] Snyk Kubernetes integration ID. If Snyk is enabled, this must be provided. For more information see https://support.snyk.io/hc/en-us/articles/360003916158-Install-the-Snyk-controller-with-Helm .'
  SnykIntegration:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: "Snyk security monitor integration. For more information see https://github.com/aws-quickstart/quickstart-eks-snyk/ ."
  NewRelicLicenseKey:
    Type: String
    Default: ""
    NoEcho: true
    Description: '[Optional] New Relic infrastructure license key. If New Relic is enabled, this must be provided. For more information see https://docs.newrelic.com/docs/accounts/install-new-relic/account-setup/license-key .'
  NewRelicIntegration:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
    Description: "New Relic infrastructure monitoring integration. For more information see https://github.com/aws-quickstart/quickstart-eks-newrelic-infrastructure/ ."
  ConfigSetName:
    Type: String
    Default: ""
    Description: Name for the config set, if you have launched the advanced configuration stack, this name must match the ConfigSetName parameter in that stack for the configuration to be applied.
  PerAccountSharedResources:
    Type: String
    AllowedValues: ['Yes', 'No']
    Default: 'Yes'
    Description: Choose No if you have already deployed another EKS Quick Start stack in this AWS account.
  PerRegionSharedResources:
    Type: String
    AllowedValues: ['Yes', 'No']
    Default: 'Yes'
    Description: Choose No if you have already deployed another EKS Quick Start stack in this region.
Mappings:
  Config:
    Prefix: { Value: 'eks-quickstart' }
Rules:
  ClusterAutoScalerVerification:
    RuleCondition: !Equals [ !Ref 'ManagedNodeGroup', 'yes' ]
    Assertions:
      - AssertDescription: To use Cluster AutoScaler you should not use Managed Node Groups
        Assert: !Contains
          - - 'Disabled'
          - !Ref 'ClusterAutoScaler'
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  CreateAdvancedConfigWithDefaults: !Equals [!Ref ConfigSetName, '']
  CreatePerAccountSharedResources: !Equals [!Ref PerAccountSharedResources, 'Yes']
  CreatePerRegionSharedResources: !Equals [!Ref PerRegionSharedResources, 'Yes']
Resources:
  AccountSharedResources:
    Type: AWS::CloudFormation::Stack
    Condition: CreatePerAccountSharedResources
    DeletionPolicy: Retain
    Metadata: { cfn-lint: { config: { ignore_checks: [W3011] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-per-account-resources.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Tags: [{Key: !FindInMap [Config, Prefix, Value], Value: AccountSharedResources}]
  RegionalSharedResources:
    Type: AWS::CloudFormation::Stack
    Condition: CreatePerRegionSharedResources
    DeletionPolicy: Retain
    Metadata:
      cfn-lint: { config: { ignore_checks: [W3011] } }
      DependsOn: !If [CreatePerAccountSharedResources, !Ref AccountSharedResources, !Ref 'AWS::NoValue']
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-per-region-resources.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
      Tags: [{Key: !FindInMap [Config, Prefix, Value], Value: RegionalSharedResources}]
  AdvancedConfigDefaultsStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateAdvancedConfigWithDefaults
    Metadata: { cfn-lint: { config: { ignore_checks: [E9902, W9901] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-advanced-configuration.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        ConfigSetName: !Ref AWS::StackName
  EKSStack:
    Type: AWS::CloudFormation::Stack
    Metadata:
      cfn-lint: { config: { ignore_checks: [ W9901 ] } }
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        HttpProxy: !Ref HttpProxy
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        PublicSubnet3ID: !Ref PublicSubnet3ID
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        PrivateSubnet3ID: !Ref PrivateSubnet3ID
        NumberOfNodes: !Ref NumberOfNodes
        MaxNumberOfNodes: !Ref NumberOfNodes
        ManagedNodeGroup: !Ref ManagedNodeGroup
        NodeInstanceType: !Ref NodeInstanceType
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        AdditionalEKSAdminUserArn: !Ref AdditionalEKSAdminUserArn
        AdditionalEKSAdminRoleArn: !Ref AdditionalEKSAdminRoleArn
        VPCID: !Ref VPCID
        ProvisionClusterAutoScaler: !Ref ClusterAutoScaler
        EfsStorageClass: !Ref EfsStorageClass
        ProvisionBastionHost: !Ref ProvisionBastionHost
        EKSPublicAccessEndpoint: !Ref EKSPublicAccessEndpoint
        ProvisionALBIngressController: !Ref ALBIngressController
        EKSClusterName: !Ref EKSClusterName
        SnykIntegrationId: !Ref SnykIntegrationId
        SnykIntegration: !Ref SnykIntegration
        NewRelicLicenseKey: !Ref NewRelicLicenseKey
        NewRelicIntegration: !Ref NewRelicIntegration
        ConfigSetName: !If [CreateAdvancedConfigWithDefaults, !Ref 'AWS::StackName', !Ref ConfigSetName]
        WindowsSupport: !Ref WindowsSupport
        WindowsNodeInstanceType: !Ref WindowsNodeInstanceType
        WindowsNumberOfNodes: !Ref WindowsNumberOfNodes
        WindowsNodeGroupName: !Ref WindowsNodeGroupName
        WindowsNodeVolumeSize: !Ref WindowsNodeVolumeSize
Outputs:
  EKSClusterName:
    Value: !GetAtt EKSStack.Outputs.EKSClusterName
  BastionIP:
    Value: !GetAtt EKSStack.Outputs.BastionIP
  BastionSecurityGroup:
    Value: !GetAtt EKSStack.Outputs.BastionSecurityGroup
  NodeGroupSecurityGroup:
    Value: !GetAtt EKSStack.Outputs.NodeGroupSecurityGroup
